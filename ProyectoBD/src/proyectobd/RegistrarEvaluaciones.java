/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import ConexionSQL.Conexion;
import static ConexionSQL.Conexion.studentsInGroup;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oracle.net.aso.i;

/**
 *
 * @author paubo
 */
public class RegistrarEvaluaciones extends javax.swing.JDialog {
    private Conexion registrarEvaluaciones;
    /**
     * Creates new form RegistrarEvaluaciones
     */
    public RegistrarEvaluaciones(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(157,210,228));
    }
    
    public RegistrarEvaluaciones(AdminSetup aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        registrarEvaluaciones = setupAdmin;
        this.setLocationRelativeTo(null);
        registrarEvaluaciones.getStudent(comBoxEstudiante);
        comBoxEvaluacion.setEnabled(false);
        exsPorcentajeObtenido.setEnabled(false);
        botonRegistrarEvaEstudiante.setEnabled(false);
        this.getContentPane().setBackground(new Color(157,210,228));
        botonRegresar.setVisible(true);
        botonRegresar2.setVisible(false);
        registrarEvaluaciones.getCourseGroup(comboBoxGrupo);
        
    }
    
    public RegistrarEvaluaciones(InicioProfesor aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        registrarEvaluaciones = setupAdmin;
        this.setLocationRelativeTo(null);
        registrarEvaluaciones.getStudent(comBoxEstudiante);
        registrarEvaluaciones.getCourseGroup(comboBoxGrupo);
        comBoxEvaluacion.setEnabled(false);
        exsPorcentajeObtenido.setEnabled(false);
        botonRegistrarEvaEstudiante.setEnabled(false);
        this.getContentPane().setBackground(new Color(157,210,228));
        botonRegresar2.setVisible(true);
        botonRegresar.setVisible(false);
    }
    
    public void registrarExS(int idGroup, String evaluation_name) throws SQLException{
        ArrayList<String> estudiantes = new ArrayList();
        try {
            studentsInGroup(estudiantes, idGroup);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        int estudiante;
        String evaluation = registrarEvaluaciones.getIdEvalution(idGroup, evaluation_name);
        int id_evaluation =Integer.parseInt(evaluation);
        for (int i = 0; i < estudiantes.size(); i++){
            estudiante = Integer.parseInt(estudiantes.get(i));
            registrarEvaluaciones.addEvaluationxStudent(estudiante, id_evaluation, 0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        evaluacionNombre = new javax.swing.JTextField();
        evaluacionDescripcion = new javax.swing.JTextField();
        evaluacionPorcentaje = new javax.swing.JTextField();
        evaluacionMiembros = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        exsPorcentajeObtenido = new javax.swing.JTextField();
        botonRegistrarEvaluacion = new javax.swing.JButton();
        botonRegistrarEvaEstudiante = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        comBoxEstudiante = new javax.swing.JComboBox<>();
        comBoxEvaluacion = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        botonFechaEntrega = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        botonRegresar2 = new javax.swing.JButton();
        botonDatos = new javax.swing.JButton();
        comboBoxGrupo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Registrar Evaluaciones");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, -1, -1));

        jLabel2.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        jLabel2.setText("Evaluación");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel4.setText("Descripción");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel5.setText("Miembros");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 90, -1));

        jLabel6.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel6.setText("Porcentaje");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, -1, 30));

        evaluacionNombre.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(evaluacionNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 130, 40));

        evaluacionDescripcion.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        evaluacionDescripcion.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        getContentPane().add(evaluacionDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 230, 140));

        evaluacionPorcentaje.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(evaluacionPorcentaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 130, 40));

        evaluacionMiembros.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(evaluacionMiembros, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 130, 40));

        jLabel8.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        jLabel8.setText("Evaluar un Estudiante");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 160, -1, -1));

        jLabel9.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel9.setText("Estudiante");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 210, -1, -1));

        jLabel10.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel10.setText("Evaluación");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, 110, -1));

        jLabel11.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        jLabel11.setText("Porcentaje Obtenido");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 370, -1, -1));

        exsPorcentajeObtenido.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(exsPorcentajeObtenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 360, 150, 40));

        botonRegistrarEvaluacion.setBackground(new java.awt.Color(255, 193, 5));
        botonRegistrarEvaluacion.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegistrarEvaluacion.setText("Registrar");
        botonRegistrarEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarEvaluacionActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegistrarEvaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 120, 70));

        botonRegistrarEvaEstudiante.setBackground(new java.awt.Color(255, 193, 5));
        botonRegistrarEvaEstudiante.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegistrarEvaEstudiante.setText("Registrar");
        botonRegistrarEvaEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarEvaEstudianteActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegistrarEvaEstudiante, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 420, 130, 60));

        botonRegresar.setBackground(new java.awt.Color(255, 193, 5));
        botonRegresar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 684, 100, -1));

        comBoxEstudiante.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(comBoxEstudiante, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, 270, 40));

        comBoxEvaluacion.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        comBoxEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxEvaluacionActionPerformed(evt);
            }
        });
        getContentPane().add(comBoxEvaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 290, 340, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Fecha de entrega");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 160, 40));

        botonFechaEntrega.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(botonFechaEntrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 130, 40));

        jButton3.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        jButton3.setText("Seleccionar ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 200, 100, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Seleccione la evaluación a calificar");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 270, 220, -1));

        jLabel13.setText("MM/DD/YYYY");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 110, 30));

        botonRegresar2.setBackground(new java.awt.Color(255, 193, 5));
        botonRegresar2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegresar2.setText("Regresar");
        botonRegresar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresar2ActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 680, 110, -1));

        botonDatos.setBackground(new java.awt.Color(255, 193, 5));
        botonDatos.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonDatos.setText("Ver Datos");
        botonDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDatosActionPerformed(evt);
            }
        });
        getContentPane().add(botonDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1025, 686, 110, -1));

        comboBoxGrupo.setFont(new java.awt.Font("Bell MT", 0, 18)); // NOI18N
        getContentPane().add(comboBoxGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 140, 50));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Grupo:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 80, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
    this.dispose();
    AdminSetup ventaAdminSetup = null;
        try {
            ventaAdminSetup = new AdminSetup(this,true,registrarEvaluaciones);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    ventaAdminSetup.setVisible(true);          // TODO add your handling code here:
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void botonRegistrarEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarEvaluacionActionPerformed
       boolean validandoPorcentaje = false;
       boolean validandoMiembros = false;
       boolean validandoFecha = false;
       int idGrupo = 0;
       idGrupo =  Integer.parseInt(comboBoxGrupo.getSelectedItem().toString());
       java.sql.Date DueDateValida = null;
       boolean validando = false;
       int porcentaje = 0;
       if(!evaluacionNombre.getText().isEmpty() && !evaluacionDescripcion.getText().isEmpty() && !evaluacionMiembros.getText().isEmpty() && !evaluacionPorcentaje.getText().isEmpty() &&
          !botonFechaEntrega.getText().isEmpty()) { 
           
           // Fecha
           String DueDate = botonFechaEntrega.getText();
           SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
           Date FechaDate = null;
           try {
               FechaDate = formatoFecha.parse(botonFechaEntrega.getText());
                validandoFecha = true;
            } catch (ParseException ex) {
                //Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null,"Error!\nFormato de fecha incorrecto.");
                validandoFecha = false;
            }
           if(validandoFecha){
            DueDateValida = new java.sql.Date(FechaDate.getTime());
           }
           // Porcentaje
           if(isInt(evaluacionPorcentaje.getText())){
               if(Integer.parseInt(evaluacionPorcentaje.getText()) >= 0){
                porcentaje = Integer.parseInt(evaluacionPorcentaje.getText());
                validandoPorcentaje = true;
                } else {
                    validandoPorcentaje = false;
                    JOptionPane.showMessageDialog(null,"Error!\nPorcentaje debe ser un número positivo.");
               }
            } else {
               validandoPorcentaje = false;
               JOptionPane.showMessageDialog(null,"Error!\nPorcentaje debe ser un número.");
           }
           
           // Miembros
            if(isInt(evaluacionMiembros.getText())){
               if(Integer.parseInt(evaluacionMiembros.getText()) >= 0){
                int miembros = 0;
                miembros = Integer.parseInt(evaluacionMiembros.getText());
                validandoMiembros = true;
                } else {
                    validandoMiembros = false;
                    JOptionPane.showMessageDialog(null,"Error!\nMiembros debe ser un número positivo.");
               }
            } else {
               validandoMiembros = false;
               JOptionPane.showMessageDialog(null,"Error!\nMiembros debe ser un número.");
           }
           
            if(validandoPorcentaje && validandoMiembros && validandoFecha){
                try {
                     registrarEvaluaciones.addEvaluation(evaluacionNombre.getText(),evaluacionDescripcion.getText(),evaluacionMiembros.getText(),porcentaje,DueDateValida,idGrupo);
                     validando = true;
                 } catch (SQLException ex) {
                     Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                     JOptionPane.showMessageDialog(null,"Error!\nEvaluación no agregada");
                     validando = false;
                }
                 if(validando){
                    JOptionPane.showMessageDialog(null,"Evaluación registrada!");
                    comBoxEvaluacion.setVisible(false);
                    comBoxEvaluacion.removeAllItems();
                    try {
                        registrarEvaluaciones.getEvaluation(comBoxEvaluacion);
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistrarYModificarGenero.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        registrarExS(idGrupo, evaluacionDescripcion.getText());
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    comBoxEvaluacion.setVisible(true);
                    evaluacionNombre.setText("");
                    evaluacionPorcentaje.setText("");
                    evaluacionMiembros.setText("");
                    botonFechaEntrega.setText("");
                    evaluacionDescripcion.setText("");
                 }
             }
            } else {
               JOptionPane.showMessageDialog(null,"Error!\nHay campos vacios");
           }
    }//GEN-LAST:event_botonRegistrarEvaluacionActionPerformed

    private void botonRegistrarEvaEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarEvaEstudianteActionPerformed
        boolean validandoActualizacionPorcentaje = false;
        String NombrePersona;
        NombrePersona = (String) comBoxEstudiante.getSelectedItem();
        String[] obteniendoIdPersona;
        obteniendoIdPersona = NombrePersona.split(" ");
        String idPerson;
        idPerson = obteniendoIdPersona[0];
        int idPersona;
        idPersona = Integer.parseInt(idPerson);
       
        String NombreEvaluacion;
        NombreEvaluacion= (String) comBoxEvaluacion.getSelectedItem();
        String[] obteniendoIDEvaluacion;
        obteniendoIDEvaluacion = NombreEvaluacion.split(" ");
        String ID;
        ID = obteniendoIDEvaluacion[0];
        int idEvaluacion;
        idEvaluacion = Integer.parseInt(ID);
        if(!exsPorcentajeObtenido.getText().isEmpty()){ 
            int porcentajeEvaluacion;
            porcentajeEvaluacion = Integer.parseInt(exsPorcentajeObtenido.getText().toString());
            try {
                registrarEvaluaciones.updateEvaluationxstudentPercentage(idPersona,idEvaluacion, porcentajeEvaluacion);
                validandoActualizacionPorcentaje = true;
            } catch (SQLException ex) {
                Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
                validandoActualizacionPorcentaje = false;
                JOptionPane.showMessageDialog(null,"Error!\nEvaluación no calificada");
            }
            if(validandoActualizacionPorcentaje){
                JOptionPane.showMessageDialog(null,"Evaluación Calificada!");
                exsPorcentajeObtenido.setText("");
            } 
        } else {
            JOptionPane.showMessageDialog(null,"Error\nCampo porcentaje vacio!");
        }
    }//GEN-LAST:event_botonRegistrarEvaEstudianteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Por cambiar
        
        comBoxEvaluacion.removeAllItems();
        exsPorcentajeObtenido.setEnabled(true);
        botonRegistrarEvaEstudiante.setEnabled(true);
        comBoxEvaluacion.setEnabled(true);
        String NombreEstudiante = (String) comBoxEstudiante.getSelectedItem();
        String[] obteniendoIDEstudiante = NombreEstudiante.split(" ");
        String ID = obteniendoIDEstudiante[0];
        int idEstudiante = Integer.parseInt(ID);
        try {
            comBoxEvaluacion.setEnabled(true);
            registrarEvaluaciones.getStudentEvaluation(comBoxEvaluacion,idEstudiante);
            //comBoxEvaluacion.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void comBoxEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxEvaluacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxEvaluacionActionPerformed

    private void botonRegresar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresar2ActionPerformed
    this.dispose();
    InicioProfesor inicioProfesor = null;
        try {
            inicioProfesor = new InicioProfesor(this,true, registrarEvaluaciones);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    inicioProfesor.setVisible(true);         
    }//GEN-LAST:event_botonRegresar2ActionPerformed

    private void botonDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDatosActionPerformed
      Tablas tablas = null;
        try {
            tablas = new Tablas(this,true,registrarEvaluaciones);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablas.setVisible(true);
    }//GEN-LAST:event_botonDatosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegistrarEvaluaciones dialog = new RegistrarEvaluaciones(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private boolean isInt(String text) {  
        try{
            Integer.parseInt(text);
            return true;
        }
        catch (NumberFormatException nfe){
            return false;
        }
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonDatos;
    private javax.swing.JTextField botonFechaEntrega;
    private javax.swing.JButton botonRegistrarEvaEstudiante;
    private javax.swing.JButton botonRegistrarEvaluacion;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JButton botonRegresar2;
    private javax.swing.JComboBox<String> comBoxEstudiante;
    private javax.swing.JComboBox<String> comBoxEvaluacion;
    private javax.swing.JComboBox<String> comboBoxGrupo;
    private javax.swing.JTextField evaluacionDescripcion;
    private javax.swing.JTextField evaluacionMiembros;
    private javax.swing.JTextField evaluacionNombre;
    private javax.swing.JTextField evaluacionPorcentaje;
    private javax.swing.JTextField exsPorcentajeObtenido;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
