/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import ConexionSQL.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import static java.lang.System.out;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static jdk.vm.ci.meta.JavaKind.Char;

/**
 *
 * @author paubo
 */
public class RegistroPersona extends javax.swing.JDialog {

    /**
     * Creates new form RegistroPersona
     */
    private Conexion registroDatos;
    private ImageIcon fotoSelect;
    private Image mImagen;
    private boolean foto = false;
    /**
     * Creates new form RegistroDatos
     */
    public RegistroPersona(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(157,210,228));
        this.setLocationRelativeTo(null);
        
    }
    public RegistroPersona(AdminSetup aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        registroDatos = setupAdmin;
        this.setLocationRelativeTo(null);
        registroDatos.getDistrict(botonDistrito);
        registroDatos.getGender(botonGenero);
        tituloRequisitosContraseña.setVisible(false);
        tituloContraseña.setVisible(false);
        botonContraseña.setVisible(false);
        BotonRegistrar.setEnabled(false);
        
        this.getContentPane().setBackground(new Color(157,210,228));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PrimerNombre = new javax.swing.JTextField();
        SegundoNombre = new javax.swing.JTextField();
        PrimerApellido = new javax.swing.JTextField();
        SegundoApellido = new javax.swing.JTextField();
        FechaNacimiento = new javax.swing.JTextField();
        BotonRegresar = new javax.swing.JButton();
        botonGenero = new javax.swing.JComboBox<>();
        botonCategoria = new javax.swing.JComboBox<>();
        botonDistrito = new javax.swing.JComboBox<>();
        BotonRegistrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tipoTelefono = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        botonEmail = new javax.swing.JTextField();
        tituloContraseña = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        botonTelefono = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        tituloRequisitosContraseña = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        botonSeleccionarFoto = new javax.swing.JButton();
        botonFoto = new javax.swing.JLabel();
        botonContraseña = new javax.swing.JPasswordField();

        jLabel5.setText("jLabel5");

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Registro de Persona");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel2.setText("Primer Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel3.setText("Segundo Nombre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel4.setText("Primer Apellido");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 60, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel6.setText("Segundo Apellido");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel7.setText("Foto:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 50, -1));

        PrimerNombre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        PrimerNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimerNombreActionPerformed(evt);
            }
        });
        getContentPane().add(PrimerNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 120, 30));

        SegundoNombre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(SegundoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 120, 30));

        PrimerApellido.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(PrimerApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 60, 120, 30));

        SegundoApellido.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(SegundoApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 100, 120, 30));

        FechaNacimiento.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 150, 120, 30));

        BotonRegresar.setBackground(new java.awt.Color(255, 193, 5));
        BotonRegresar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        BotonRegresar.setText("Regresar");
        BotonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 670, -1, -1));

        botonGenero.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGeneroActionPerformed(evt);
            }
        });
        getContentPane().add(botonGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 150, 40));

        botonCategoria.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estudiante", "Profesor", "Admin" }));
        getContentPane().add(botonCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 110, 40));

        botonDistrito.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDistritoActionPerformed(evt);
            }
        });
        getContentPane().add(botonDistrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 190, 150, 40));

        BotonRegistrar.setBackground(new java.awt.Color(255, 193, 5));
        BotonRegistrar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        BotonRegistrar.setText("Registrar");
        BotonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 650, 130, 50));

        jLabel8.setText("DD/MM/YYYY");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 80, 30));

        jLabel10.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel10.setText("Tipo Teléfono");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, 100, -1));

        tipoTelefono.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        tipoTelefono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casa ", "Celular", "Oficina" }));
        getContentPane().add(tipoTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 270, 70, 30));

        jLabel17.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel17.setText("Fecha Nacimiento");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, -1, -1));
        getContentPane().add(botonEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 170, 30));

        tituloContraseña.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        tituloContraseña.setText("Contraseña");
        getContentPane().add(tituloContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 600, 110, 30));

        jLabel18.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel18.setText("Email");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 80, -1));
        getContentPane().add(botonTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 270, 170, 30));

        jLabel19.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel19.setText("Opcional");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 80, -1));

        jButton1.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 510, 110, 40));

        jLabel20.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel20.setText("Seleccione la categoria");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 190, -1));

        tituloRequisitosContraseña.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        tituloRequisitosContraseña.setText("Debe tener Mayusculas, Minusculas, Números y Caracteres");
        getContentPane().add(tituloRequisitosContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 570, 380, 30));

        jLabel16.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel16.setText("Teléfono");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 280, 80, -1));

        botonSeleccionarFoto.setText("Seleccionar Foto");
        botonSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarFotoActionPerformed(evt);
            }
        });
        getContentPane().add(botonSeleccionarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 120, 40));
        getContentPane().add(botonFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, 120, 100));

        botonContraseña.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(botonContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 600, 150, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PrimerNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimerNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrimerNombreActionPerformed

    private void BotonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegresarActionPerformed
        this.dispose();
        AdminSetup ventaAdminSetup = null;
        try {
            ventaAdminSetup = new AdminSetup(this,true,registroDatos);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        ventaAdminSetup.setVisible(true);
    }//GEN-LAST:event_BotonRegresarActionPerformed

    private void botonGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonGeneroActionPerformed

    private void BotonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegistrarActionPerformed
        String Categoria = botonCategoria.getSelectedItem().toString();
        boolean validandoPrimerNombre = false;
        boolean validandoPrimerApellido = false;
        boolean validandoFomatoFecha = false;
        boolean validandoContraseña = false;
        boolean validandoTelefono = false;
        boolean validandoEmail = false;
        boolean validandoTelefonoEmail = true;
        int idPersona = 0;

        java.sql.Date FechaNacimientoValidada = null;

        if(PrimerNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Error:\nEl campo Primer Nombre está vacio.");  
         } else {
            validandoPrimerNombre = true;
        }
        // Validando primer apellido no es vacio
        if(PrimerApellido.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Error:\nEl campo Primer Apellido está vacio.");  
         } else {
            validandoPrimerApellido = true;
        }
           //Fecha
        if(FechaNacimiento.getText().isEmpty()){   
            validandoFomatoFecha = true;
        } else {
            String FechaNacimientoRegistro = FechaNacimiento.getText();
            String[] partesFecha = FechaNacimientoRegistro.split("/");
            String ParteDia = partesFecha[0];
            String ParteMes = partesFecha[1];
            String ParteAños = partesFecha[2];
            int parte1int = Integer.parseInt(ParteDia);
            int parte2int = Integer.parseInt(ParteMes);
            int parte3int = Integer.parseInt(ParteAños);
            if(ParteDia.length() != 2 || ParteMes.length() != 2 || ParteAños.length() != 4){
                    JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nError en el formato.");  
             } else {
                    if(parte1int != 00){
                      if(parte1int > 0 && parte1int <= 31){
                        if(parte2int > 0 && parte2int <= 12){
                           if(parte3int > 1800 && parte3int < 2023){
                             validandoFomatoFecha = true;
                            } else {
                            JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nEl año debe estar entre 1800 y 2022");
                            validandoFomatoFecha = false;   
                            }
                        } else{
                            JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \n El nes debe estar entre 1 y 12");
                            validandoFomatoFecha = false;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nEl día debe estar entre entre 1 y 31");
                        validandoFomatoFecha = false;}
                    } else {
                    JOptionPane.showMessageDialog(null,"Error en Fecha DE Nacimiento \nDía debe estar entre 1 y 31");
                        validandoFomatoFecha = false;
                    }
                } 
            if(validandoFomatoFecha){
                SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                Date FechaDate = null;
                try {
                    FechaDate = formatoFecha.parse(FechaNacimiento.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                }
                FechaNacimientoValidada = new java.sql.Date(FechaDate.getTime());   
            }
        }

         // Distrito
        int Distrito = 0;
        String DistritoNombre = (String) botonDistrito.getSelectedItem();
        try {
            Distrito = registroDatos.getDistrictCode(DistritoNombre);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Genero
        int Genero = 0;
        String GeneroNombre = (String) botonGenero.getSelectedItem();
        try {
            Genero = registroDatos.getGenderCode(GeneroNombre);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // validando contraseña 
        
        if(!botonContraseña.getText().isEmpty()){
            String Contraseña = botonContraseña.getText().toString();
            boolean mayuscula = false;
            boolean minuscula = false;
            boolean numero =  false;         //validandoContraseña
            boolean caracter = false;
            for(int i = 0; i < Contraseña.length(); i++){
                char Letra = Contraseña.charAt(i);
                // Revisando tiene mayusculas
                if(Character.isUpperCase(Letra)){
                    mayuscula = true;
                }
                else if(Character.isLowerCase(Letra)){
                    minuscula = true;
                }
                else if(Character.isDigit(Letra)){
                    numero = true;
                }
                else {
                    caracter = true;
                }
                }
            if(mayuscula && minuscula && numero && caracter){
                validandoContraseña = true;
            }
        }
        
        //validando teléfono         boolean validandoTelefono = false;
                                   // boolean validandoEmail = false;
        if(!botonTelefono.getText().isEmpty()){
           String telefonoRegistroPersona = botonTelefono.getText();
           if(isInt(botonTelefono.getText())){
                if(telefonoRegistroPersona.length() == 8){
                validandoTelefono = true;  
                validandoTelefonoEmail = true;
                } else {
                     JOptionPane.showMessageDialog(null,"Error!!\nIngrese un número de telefono de 8 digitos"); 
                     validandoTelefono = false;
                     validandoTelefonoEmail = false;
                }
            } else {
               JOptionPane.showMessageDialog(null,"Error en télefono!!\nSolo debe ingresar números enteros.");
               validandoTelefono = false;
               validandoTelefonoEmail = false;
            }
        }
        
        // validando email
        if(!botonEmail.getText().isEmpty()){
            String CorreoRegistroPersona = botonEmail.getText(); 
            Pattern pattern = Pattern.compile("^[_a-z-A-Z0-9-]+(\\.[_a-z0-9-]+)*@" + 
                    "[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$");
            Matcher mather = pattern.matcher(CorreoRegistroPersona);
            if (mather.find()) {
                validandoEmail = true;
                validandoTelefonoEmail = true;
            } else {
                JOptionPane.showMessageDialog(null,"El email ingresado es inválido."); 
                validandoEmail = false;
                validandoTelefonoEmail = false;
            }
        }

        try {
            if(validandoPrimerNombre && validandoPrimerApellido && validandoFomatoFecha && validandoTelefonoEmail){
                boolean validandoAgregado = false;
                    if(Categoria == "Estudiante"){
                        if(registroDatos.addPerson(PrimerNombre.getText(), SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText(),Genero,Distrito,FechaNacimientoValidada)){
                            idPersona = registroDatos.getPersonID(PrimerNombre.getText(),SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText());
                            registroDatos.addStudent(idPersona);
                            JOptionPane.showMessageDialog(null,"Estudiante Agregado.");
                            validandoAgregado = true;
                        } else {
                            JOptionPane.showMessageDialog(null,"Estudiante no Agregado.");
                            validandoAgregado = false;
                        }
                    }
                    if(Categoria == "Profesor"){
                      if(registroDatos.addPerson(PrimerNombre.getText(), SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText(),Genero,Distrito,FechaNacimientoValidada)){
                            idPersona = registroDatos.getPersonID(PrimerNombre.getText(),SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText());
                            registroDatos.addProfessor(idPersona);
                            JOptionPane.showMessageDialog(null,"Profesor Agregado.");  
                            validandoAgregado = true;
                            } else {
                            JOptionPane.showMessageDialog(null,"Profesor no Agregado.");
                            validandoAgregado = false;
                            } 
                    }
                    if(Categoria == "Admin"){
                        if(!botonContraseña.getText().isEmpty()){
                            if(validandoContraseña){
                                if(registroDatos.addPerson(PrimerNombre.getText(), SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText(),Genero,Distrito,FechaNacimientoValidada)){
                                   idPersona = registroDatos.getPersonID(PrimerNombre.getText(),SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText());
                                   String UsuarioAdmin = PrimerNombre.getText() + "Admin";
                                   String ContraseñaAdmin = registroDatos.encriptarContraseña(String.valueOf(botonContraseña.getPassword())); // String.valueOf(botonContraInco.getPassword()
                                   registroDatos.addAdmin(idPersona,UsuarioAdmin,ContraseñaAdmin);
                                   JOptionPane.showMessageDialog(null,"Admin Agregado.");
                                   validandoAgregado = true;
                                } else {
                                    JOptionPane.showMessageDialog(null,"Admin no Agregado.");
                                    validandoAgregado = false;
                                }
                            } else {
                                JOptionPane.showMessageDialog(null,"Error en Contraseña\nDebe tener mayusculas, minusculas, números y caracteres"); 
                            }
                        } else {
                            JOptionPane.showMessageDialog(null,"Campo de contraseña vacio");
                        }
                    }
            //Añadir teléfono o email
                if(validandoAgregado){
                    if(validandoTelefono){
                        String telefono;
                        int TelefonoNumero = 0;
                        String Description = tipoTelefono.getSelectedItem().toString();
                        TelefonoNumero = Integer.parseInt(botonTelefono.getText().toString());
                        try {
                            registroDatos.addPhoneNumber(Description,TelefonoNumero,idPersona);
                            validandoTelefono = true;
                        } catch (SQLException ex) {
                           Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                           validandoTelefono = false;
                        }
                    }
                    if(validandoEmail) {
                        String Correo = botonEmail.getText().toString();
                        registroDatos.addEmail(Correo,idPersona);
                    }
                    // AgregarFoto
                    if(foto){
                       try {
                        registroDatos.escribeImagenEnBBDD(idPersona,mImagen);
                            JOptionPane.showMessageDialog(null,"Imagen Agregada!");
                        } catch (SQLException ex) {
                            Logger.getLogger(ModificarPersona.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(ModificarPersona.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    
                    }
  
                }
            } else {
                JOptionPane.showMessageDialog(null,"Persona no agregada.");
            }
     }  catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BotonRegistrarActionPerformed

    private void botonDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDistritoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonDistritoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Categoria = botonCategoria.getSelectedItem().toString();
        if(Categoria == "Estudiante" || Categoria == "Profesor"){
            tituloRequisitosContraseña.setVisible(false);
            botonContraseña.setVisible(false);
            tituloContraseña.setVisible(false);
            BotonRegistrar.setEnabled(true);
        }
        if(Categoria == "Admin" ){
            tituloRequisitosContraseña.setVisible(true);
            botonContraseña.setVisible(true);
            tituloContraseña.setVisible(true);
            BotonRegistrar.setEnabled(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarFotoActionPerformed
        String Ruta = "";
        JFileChooser fotoSeleccionada = new JFileChooser();
        FileNameExtensionFilter filtradoFormatos = new FileNameExtensionFilter("JGP, PNG", "jpg", "png");
        fotoSeleccionada.setFileFilter(filtradoFormatos);
        
        int respuestaFoto = fotoSeleccionada.showOpenDialog(this);
        
        if (respuestaFoto == JFileChooser.APPROVE_OPTION) {
            Ruta = fotoSeleccionada.getSelectedFile().getPath();
            mImagen = new ImageIcon(Ruta).getImage();
            fotoSelect = new ImageIcon(mImagen.getScaledInstance(botonFoto.getWidth(), botonFoto.getHeight(), Image.SCALE_SMOOTH));
            botonFoto.setIcon(fotoSelect);
            foto = true;
        }
    }//GEN-LAST:event_botonSeleccionarFotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegistroPersona dialog = new RegistroPersona(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonRegistrar;
    private javax.swing.JButton BotonRegresar;
    private javax.swing.JTextField FechaNacimiento;
    private javax.swing.JTextField PrimerApellido;
    private javax.swing.JTextField PrimerNombre;
    private javax.swing.JTextField SegundoApellido;
    private javax.swing.JTextField SegundoNombre;
    private javax.swing.JComboBox<String> botonCategoria;
    private javax.swing.JPasswordField botonContraseña;
    private javax.swing.JComboBox<String> botonDistrito;
    private javax.swing.JTextField botonEmail;
    private javax.swing.JLabel botonFoto;
    private javax.swing.JComboBox<String> botonGenero;
    private javax.swing.JButton botonSeleccionarFoto;
    private javax.swing.JTextField botonTelefono;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> tipoTelefono;
    private javax.swing.JLabel tituloContraseña;
    private javax.swing.JLabel tituloRequisitosContraseña;
    // End of variables declaration//GEN-END:variables

    private boolean isInt(String text) {  
        try{
            Integer.parseInt(text);
            return true;
        }
        catch (NumberFormatException nfe){
            return false;
        }
       
    }
}
