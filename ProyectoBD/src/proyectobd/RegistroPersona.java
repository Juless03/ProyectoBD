/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import ConexionSQL.Conexion;
import java.awt.Color;
import static java.lang.System.out;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author paubo
 */
public class RegistroPersona extends javax.swing.JDialog {

    /**
     * Creates new form RegistroPersona
     */
    private Conexion registroDatos;
    /**
     * Creates new form RegistroDatos
     */
    public RegistroPersona(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(157,210,228));
        this.getContentPane().setBackground(new Color(157,210,228));
        this.setLocationRelativeTo(null);
        
    }
    public RegistroPersona(AdminSetup aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        registroDatos = setupAdmin;
        this.setLocationRelativeTo(null);
        registroDatos.getDistrict(botonDistrito);
        registroDatos.getGender(botonGenero);
        registroDatos.getPerson(personaTelefono);
        registroDatos.getPerson(personaEmail);
        this.getContentPane().setBackground(new Color(157,210,228));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PrimerNombre = new javax.swing.JTextField();
        SegundoNombre = new javax.swing.JTextField();
        PrimerApellido = new javax.swing.JTextField();
        SegundoApellido = new javax.swing.JTextField();
        FechaNacimiento = new javax.swing.JTextField();
        BotonRegresar = new javax.swing.JButton();
        botonGenero = new javax.swing.JComboBox<>();
        botonCategoria = new javax.swing.JComboBox<>();
        botonDistrito = new javax.swing.JComboBox<>();
        BotonRegistrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        numeroTelefono = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tipoTelefono = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        personaTelefono = new javax.swing.JComboBox<>();
        botonRegistrarTelefono = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        direccionEmail = new javax.swing.JTextField();
        personaEmail = new javax.swing.JComboBox<>();
        registrarEmail = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Registro de Persona");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 54, -1, -1));

        jLabel2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel2.setText("Primer Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 148, -1, -1));

        jLabel3.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel3.setText("Segundo Nombre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 195, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel4.setText("Primer Apellido");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 249, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel6.setText("Segundo Apellido");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 310, -1, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel7.setText("Fecha Nacimiento");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 384, -1, -1));

        PrimerNombre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        PrimerNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimerNombreActionPerformed(evt);
            }
        });
        getContentPane().add(PrimerNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 148, 97, -1));

        SegundoNombre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(SegundoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 195, 97, -1));

        PrimerApellido.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(PrimerApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 249, 97, -1));

        SegundoApellido.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(SegundoApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 319, 97, -1));

        FechaNacimiento.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 382, 97, -1));

        BotonRegresar.setBackground(new java.awt.Color(255, 193, 5));
        BotonRegresar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        BotonRegresar.setText("Regresar");
        BotonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 628, -1, -1));

        botonGenero.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGeneroActionPerformed(evt);
            }
        });
        getContentPane().add(botonGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 435, 125, 47));

        botonCategoria.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estudiante", "Profesor", "Admin" }));
        getContentPane().add(botonCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(231, 435, 125, 47));

        botonDistrito.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDistritoActionPerformed(evt);
            }
        });
        getContentPane().add(botonDistrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 437, 125, 43));

        BotonRegistrar.setBackground(new java.awt.Color(255, 193, 5));
        BotonRegistrar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        BotonRegistrar.setText("Registrar");
        BotonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(BotonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 521, 150, 40));

        jLabel8.setText("DD/MM/YYYY");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 359, 80, 30));

        jLabel9.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel9.setText("NÃºmero ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 148, -1, -1));

        numeroTelefono.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(numeroTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(789, 148, 100, -1));

        jLabel10.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel10.setText("Tipo");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 195, 40, -1));

        tipoTelefono.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        tipoTelefono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Casa ", "Celular", "Oficina" }));
        getContentPane().add(tipoTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(789, 195, 100, -1));

        jLabel11.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel11.setText("Persona");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 249, -1, -1));

        personaTelefono.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(personaTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 180, -1));

        botonRegistrarTelefono.setBackground(new java.awt.Color(255, 193, 5));
        botonRegistrarTelefono.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegistrarTelefono.setText("Registrar");
        botonRegistrarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarTelefonoActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegistrarTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(789, 310, 100, 36));

        jLabel12.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel12.setText("Direccion Email");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 437, -1, -1));

        jLabel13.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel13.setText("Persona");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 500, -1, -1));

        direccionEmail.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(direccionEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 150, -1));

        personaEmail.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(personaEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 500, 180, -1));

        registrarEmail.setBackground(new java.awt.Color(255, 193, 5));
        registrarEmail.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        registrarEmail.setText("Registrar");
        registrarEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarEmailActionPerformed(evt);
            }
        });
        getContentPane().add(registrarEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(789, 558, 100, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PrimerNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimerNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrimerNombreActionPerformed

    private void BotonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegresarActionPerformed
        this.dispose();
        AdminSetup ventaAdminSetup = null;
        try {
            ventaAdminSetup = new AdminSetup(this,true,registroDatos);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        ventaAdminSetup.setVisible(true);
    }//GEN-LAST:event_BotonRegresarActionPerformed

    private void botonGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonGeneroActionPerformed

    private void BotonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegistrarActionPerformed
        String Categoria = botonCategoria.getSelectedItem().toString();
        boolean validandoPrimerNombre = false;
        boolean validandoPrimerApellido = false;
        boolean validandoFomatoFecha = false;
        java.sql.Date FechaNacimientoValidada = null;
        
        if(PrimerNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Error: \n El campo Primer Nombre estÃ¡ vacio.");  
         } else {
            validandoPrimerNombre = true;
        }
        // Validando primer apellido no es vacio
        if(PrimerApellido.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Error: \n El campo Primer Apellido estÃ¡ vacio.");  
         } else {
            validandoPrimerApellido = true;
        }
          // //Fecha
        if(FechaNacimiento.getText().isEmpty()){   
            validandoFomatoFecha = true;
        } else {
            String FechaNacimientoRegistro = FechaNacimiento.getText();
            String[] partesFecha = FechaNacimientoRegistro.split("/");
            String ParteDia = partesFecha[0];
            String ParteMes = partesFecha[1];
            String ParteAÃ±os = partesFecha[2];
            int parte1int = Integer.parseInt(ParteDia);
            int parte2int = Integer.parseInt(ParteMes);
            int parte3int = Integer.parseInt(ParteAÃ±os);
            if(ParteDia.length() != 2 || ParteMes.length() != 2 || ParteAÃ±os.length() != 4){
                    JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nError en el formato.");  
             } else {
                    if(parte1int != 00){
                      if(parte1int > 0 && parte1int <= 31){
                        if(parte2int > 0 && parte2int <= 12){
                           if(parte3int > 1800 && parte3int < 2022){
                             validandoFomatoFecha = true;
                            } else {
                            JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nEl aÃ±o debe estar entre 1800 y 2022");
                            validandoFomatoFecha = false;   
                            }
                        } else{
                            JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \n El nes debe estar entre 1 y 12");
                            validandoFomatoFecha = false;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null,"Error en Fecha de Nacimiento \nEl dÃ­a debe estar entre entre 1 y 31");
                        validandoFomatoFecha = false;}
                    } else {
                    JOptionPane.showMessageDialog(null,"Error en Fecha DE Nacimiento \nDÃ­a debe estar entre 1 y 31");
                        validandoFomatoFecha = false;
                    }
                } 
            if(validandoFomatoFecha){
                SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                Date FechaDate = null;
                try {
                    FechaDate = formatoFecha.parse(FechaNacimiento.getText());
                } catch (ParseException ex) {
                    Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                }
                FechaNacimientoValidada = new java.sql.Date(FechaDate.getTime());   
            }
        }

         // Distrito
        int Distrito = 0;
        String DistritoNombre = (String) botonDistrito.getSelectedItem();
        try {
            Distrito = registroDatos.getDistrictCode(DistritoNombre);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Genero
        int Genero = 0;
        String GeneroNombre = (String) botonGenero.getSelectedItem();
        try {
            Genero = registroDatos.getGenderCode(GeneroNombre);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if(validandoPrimerNombre && validandoPrimerApellido && validandoFomatoFecha){
                if(registroDatos.addPerson(PrimerNombre.getText(), SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText(),Genero,Distrito,FechaNacimientoValidada)){
                    int idPersona = registroDatos.getPersonID(PrimerNombre.getText(),SegundoNombre.getText(),PrimerApellido.getText(),SegundoApellido.getText());
                    if(Categoria == "Estudiante"){
                        registroDatos.addStudent(idPersona);    
                    }
                    if(Categoria == "Profesor"){
                          registroDatos.addProfessor(idPersona); 
                    }
                    if(Categoria == "Admin"){
                        String UsuarioAdmin = PrimerNombre.getText() + "Admin";
                        String ContraseÃ±aAdmin = PrimerNombre.getText() + "Password";
                        registroDatos.addAdmin(idPersona,UsuarioAdmin,ContraseÃ±aAdmin);  
                    }
                    JOptionPane.showMessageDialog(null,"Persona Agregada.");
                    this.dispose();
                    AdminSetup ventaAdminSetup = null;
                    ventaAdminSetup = new AdminSetup(this,true,registroDatos);
                    ventaAdminSetup.setVisible(true); 
                    
            } else {
                JOptionPane.showMessageDialog(null,"Persona no agregada.");
            }
         } else {
                JOptionPane.showMessageDialog(null,"Fallo al agregar persona.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BotonRegistrarActionPerformed

    private void botonDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDistritoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonDistritoActionPerformed

    private void registrarEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarEmailActionPerformed
        boolean validandoCorreo = false;
        String Correo = direccionEmail.getText();
        if(direccionEmail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Error: \nEl campo Correo esta vacio.");  
        } else {
            int idPersona = 0;
            String NombrePersona = personaEmail.getSelectedItem().toString();
            String[] partesNombre = NombrePersona.split(" ");
            String PrimerNombre = partesNombre[0];
            String SegundoNombre = partesNombre[1];
            String PrimerApellido = partesNombre[2];
            String SegundoApellido = partesNombre[3];
            String Description = tipoTelefono.getSelectedItem().toString();
            try {
               idPersona = registroDatos.getPersonID(PrimerNombre,SegundoNombre,PrimerApellido,SegundoApellido);
            } catch (SQLException ex) {
                Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
            }
            Pattern pattern = Pattern.compile("^[_a-z-A-Z0-9-]+(\\.[_a-z0-9-]+)*@" + 
                "[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$");
            Matcher mather = pattern.matcher(direccionEmail.getText().toString());
            if (mather.find()) {
                validandoCorreo = true;
                try {
                    registroDatos.addEmail(Correo,idPersona);
                    validandoCorreo = true;
                } catch (SQLException ex) {
                    Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                    validandoCorreo = false;
                }
            } else {
                JOptionPane.showMessageDialog(null,"El email invÃ¡lido."); 
            }
        }
        if(validandoCorreo){
            JOptionPane.showMessageDialog(null,"Email registrado."); 
            this.dispose();
            AdminSetup ventaAdminSetup = null;
            try {
                ventaAdminSetup = new AdminSetup(this,true,registroDatos);
            } catch (SQLException ex) {
                Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
            }
            ventaAdminSetup.setVisible(true); 
        }
  
        
    }//GEN-LAST:event_registrarEmailActionPerformed

    private void botonRegistrarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarTelefonoActionPerformed
       boolean validandoTelefono = false;
       int telefono = 0;
       int idPersona = 0;
       String NombrePersona = personaTelefono.getSelectedItem().toString();
       String[] partesNombre = NombrePersona.split(" ");
       String PrimerNombre = partesNombre[0];
       String SegundoNombre = partesNombre[1];
       String PrimerApellido = partesNombre[2];
       String SegundoApellido = partesNombre[3];
       String Description = tipoTelefono.getSelectedItem().toString();
        if(numeroTelefono.getText().isEmpty()){
           JOptionPane.showMessageDialog(null,"TelÃ©fono no agregado. Campo Vacio");
       } else {
           telefono = Integer.parseInt(numeroTelefono.getText().toString());
           
           try {
               idPersona = registroDatos.getPersonID(PrimerNombre,SegundoNombre,PrimerApellido,SegundoApellido);
           } catch (SQLException ex) {
               Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
           }
           try {
               registroDatos.addPhoneNumber(Description,telefono,idPersona);
               validandoTelefono = true;
           } catch (SQLException ex) {
               Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
               validandoTelefono = false;
           }
       }
        if(validandoTelefono){
            JOptionPane.showMessageDialog(null,"Telefono Registrado!");
            this.dispose();
            AdminSetup ventaAdminSetup = null;
           try {
               ventaAdminSetup = new AdminSetup(this,true,registroDatos);
           } catch (SQLException ex) {
               Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
           }
            ventaAdminSetup.setVisible(true); 
            
        }
    }//GEN-LAST:event_botonRegistrarTelefonoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RegistroPersona dialog = new RegistroPersona(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonRegistrar;
    private javax.swing.JButton BotonRegresar;
    private javax.swing.JTextField FechaNacimiento;
    private javax.swing.JTextField PrimerApellido;
    private javax.swing.JTextField PrimerNombre;
    private javax.swing.JTextField SegundoApellido;
    private javax.swing.JTextField SegundoNombre;
    private javax.swing.JComboBox<String> botonCategoria;
    private javax.swing.JComboBox<String> botonDistrito;
    private javax.swing.JComboBox<String> botonGenero;
    private javax.swing.JButton botonRegistrarTelefono;
    private javax.swing.JTextField direccionEmail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField numeroTelefono;
    private javax.swing.JComboBox<String> personaEmail;
    private javax.swing.JComboBox<String> personaTelefono;
    private javax.swing.JButton registrarEmail;
    private javax.swing.JComboBox<String> tipoTelefono;
    // End of variables declaration//GEN-END:variables
}
