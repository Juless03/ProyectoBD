/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import ConexionSQL.Conexion;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author paubo
 */
public class ModificarCursos extends javax.swing.JDialog {
    private Conexion modificarCurso;
    private String CursoSeleccionado;
    private boolean modificarProfesorID = false;
    private boolean modificarCursoID = false;
    /**
     * Creates new form ModificarCursos
     */
    public ModificarCursos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(157,210,228));


    }       
    
    public ModificarCursos(AdminSetup aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        modificarCurso = setupAdmin;
        this.getContentPane().setBackground(new Color(157,210,228));
        modificarCurso.getCourse(comBoxCurso);
        modificarCurso.getCourseGroup(comBoxGrupo);
        modificarCurso.getCourseGroup(comboboxEstudianteGrupo);
        modificarCurso.getProfessor(comboBoxProfesor);
        modificarCurso.getCourseRegistroGrupo(comboBoxCursoModificar);
        checkActivo.setEnabled(false);
        checkAbandono.setEnabled(false);
        botonModificarSxG.setEnabled(false);
        comboBoxEstudiante.setEnabled(false);
        comboBoxProfesor.setEnabled(false);
        comboBoxCursoModificar.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tituloBoton2 = new javax.swing.JLabel();
        comBoxCurso = new javax.swing.JComboBox<>();
        botonCreditos = new javax.swing.JTextField();
        botonNombreCurso = new javax.swing.JTextField();
        botonModificarCurso = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        titulomodificarSeleccion = new javax.swing.JLabel();
        tituloBoton3 = new javax.swing.JLabel();
        comBoxGrupo = new javax.swing.JComboBox<>();
        botonAño = new javax.swing.JTextField();
        botonSemestre = new javax.swing.JTextField();
        botonModificarGrupo = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboboxEstudianteGrupo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        botonModificarSxG = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        checkAbandono = new javax.swing.JCheckBox();
        checkActivo = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        comboBoxEstudiante = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        botonDatos = new javax.swing.JButton();
        comboBoxProfesor = new javax.swing.JComboBox<>();
        comboBoxCursoModificar = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        botonSeleccionarCurso = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        botonSeleccionarProfesor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Modificar Cursos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        tituloBoton2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        tituloBoton2.setText("Creditos");
        getContentPane().add(tituloBoton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 100, 40));

        comBoxCurso.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        comBoxCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxCursoActionPerformed(evt);
            }
        });
        getContentPane().add(comBoxCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 240, 40));

        botonCreditos.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(botonCreditos, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 130, 50));

        botonNombreCurso.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(botonNombreCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 130, 50));

        botonModificarCurso.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarCurso.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarCurso.setText("Modificar");
        botonModificarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarCursoActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 130, 60));

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Grupo");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, 260, -1));

        titulomodificarSeleccion.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        getContentPane().add(titulomodificarSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, -1, -1));

        tituloBoton3.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        tituloBoton3.setText("Nombre Curso");
        getContentPane().add(tituloBoton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 100, 40));

        comBoxGrupo.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        comBoxGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(comBoxGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 220, 160, 40));

        botonAño.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonAño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñoActionPerformed(evt);
            }
        });
        getContentPane().add(botonAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 130, 40));

        botonSemestre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(botonSemestre, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, 130, 40));

        botonModificarGrupo.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarGrupo.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarGrupo.setText("Modificar");
        botonModificarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 120, 60));

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel12.setText("Estudiante en un Grupo");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 200, 209, -1));

        comboboxEstudianteGrupo.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        comboboxEstudianteGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxEstudianteGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(comboboxEstudianteGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 230, 130, 40));

        jLabel14.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel14.setText("Estudiante");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 340, -1, -1));

        botonModificarSxG.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarSxG.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarSxG.setText("Modificar");
        botonModificarSxG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarSxGActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarSxG, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 450, 120, 50));

        botonRegresar.setBackground(new java.awt.Color(255, 193, 5));
        botonRegresar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 105, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Curso");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 260, -1));

        jLabel3.setText("Curso");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, 60, 20));

        jLabel4.setText("Professor");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, 60, 20));

        jLabel5.setText("Año");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 300, 60, 30));

        jLabel8.setText("Semestre");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 360, 60, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Status");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 400, 80, 30));

        checkAbandono.setText("ABANDONO");
        checkAbandono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAbandonoActionPerformed(evt);
            }
        });
        getContentPane().add(checkAbandono, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 410, 100, 30));

        checkActivo.setText("ACTIVO");
        getContentPane().add(checkActivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 380, 100, 30));

        jLabel9.setText("Grupo");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 240, 50, 30));

        comboBoxEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEstudianteActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxEstudiante, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 330, 270, 30));

        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 230, 100, 40));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Seleccione el estudiante a modificar");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 300, 260, 30));

        jLabel11.setText("DD/MM/YYYY");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 90, 40));

        botonDatos.setBackground(new java.awt.Color(255, 193, 5));
        botonDatos.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonDatos.setText("Ver Datos");
        botonDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDatosActionPerformed(evt);
            }
        });
        getContentPane().add(botonDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 660, 110, -1));

        getContentPane().add(comboBoxProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, 220, 40));

        getContentPane().add(comboBoxCursoModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 480, 220, 40));

        jLabel13.setText("Modificar Curso");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, 140, 20));

        botonSeleccionarCurso.setText("Seleccionar");
        botonSeleccionarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarCursoActionPerformed(evt);
            }
        });
        getContentPane().add(botonSeleccionarCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 480, 110, 40));

        jLabel15.setText("Modificar Profesor");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 390, 140, 20));

        botonSeleccionarProfesor.setText("Seleccionar");
        botonSeleccionarProfesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarProfesorActionPerformed(evt);
            }
        });
        getContentPane().add(botonSeleccionarProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 410, 110, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
    this.dispose();
    AdminSetup ventaAdminSetup = null;
        try {
            ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
        } catch (SQLException ex) {
            Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    ventaAdminSetup.setVisible(true); 
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void comBoxGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxGrupoActionPerformed

    private void botonModificarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarCursoActionPerformed

        boolean validandoCreditos = false;
        boolean validandoNombre = false;
        CursoSeleccionado = (String) comBoxCurso.getSelectedItem();
        if(botonCreditos.getText().isEmpty() && botonNombreCurso.getText().isEmpty()){ 
           JOptionPane.showMessageDialog(null,"Por favor llene los campos a modificar");
       } else {
            if(!botonCreditos.getText().isEmpty()){
                if (isInt(botonCreditos.getText())){
                    int Creditos = Integer.parseInt(botonCreditos.getText());
                    try {
                      modificarCurso.updateCourseCredits(CursoSeleccionado,Creditos);
                      validandoCreditos = true;
                   } catch (SQLException ex) {
                        Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   } else {
                    JOptionPane.showMessageDialog(null,"Error en creditos:\nSolo debe ingresar números.");} 
                }
                if(!botonNombreCurso.getText().isEmpty()){
                try {
                    String nuevoNombreCorso = botonNombreCurso.getText().toString();
                    modificarCurso.updateCourseName(CursoSeleccionado, nuevoNombreCorso);
                    validandoNombre = true;
                     } catch (SQLException ex) {
                    Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
           }
           if(validandoCreditos & validandoNombre){
               JOptionPane.showMessageDialog(null,"Creditos Y Nombre Modificado!!");
               botonCreditos.setText("");
               botonNombreCurso.setText("");
               // Actualizar ComboBox
                comBoxCurso.setVisible(false);
                comBoxCurso.removeAllItems();
                try {
                    modificarCurso.getCourse(comBoxCurso);
                } catch (SQLException ex) {
                    Logger.getLogger(RegistrarYModificarGenero.class.getName()).log(Level.SEVERE, null, ex);
                }
                comBoxCurso.setVisible(true);

           } else {
               if(validandoCreditos){
                   JOptionPane.showMessageDialog(null,"Creditos Modificados!!");
                   botonCreditos.setText("");

               }
               if(validandoNombre){
                   JOptionPane.showMessageDialog(null,"Nombre Modificado!!");
                    // Actualizar ComboBox
                    botonCreditos.setText("");
                    botonNombreCurso.setText("");
                    comBoxCurso.setVisible(false);
                    comBoxCurso.removeAllItems();
                    try {
                        modificarCurso.getCourse(comBoxCurso);
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistrarYModificarGenero.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    comBoxCurso.setVisible(true);
               }
               
         }

               
    }//GEN-LAST:event_botonModificarCursoActionPerformed

    private void comBoxCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxCursoActionPerformed

    private void botonModificarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarGrupoActionPerformed
        boolean validandoAño = false;
        boolean validandoProfesor = false;
        boolean validandoSemestre = false;
        boolean validandoIdCourse = false;
        int Grupo;
        Grupo = Integer.parseInt(comBoxGrupo.getSelectedItem().toString());
        if(botonAño.getText().isEmpty() && botonSemestre.getText().isEmpty() && !modificarProfesorID && !modificarCursoID){
            JOptionPane.showMessageDialog(null,"No se ha modificado nada \nCampos vacios.");  
            } else {
                if(!botonAño.getText().isEmpty()){
                    if(isInt(botonAño.getText())){
                        if(botonAño.getText().length() == 4){
                            int nuevoAño;
                            nuevoAño = Integer.parseInt(botonAño.getText().toString());
                            try { 
                                modificarCurso.updateCourseGroupYear(Grupo, nuevoAño);
                                botonAño.setText("");
                            } catch (SQLException ex) {
                                Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                            }
                           validandoAño = true;
                        } else {
                            JOptionPane.showMessageDialog(null,"Error \nDigite un año verdadero");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null,"Error \nEl año debe ser un número entero");  
                    }     
                }

                if(!botonSemestre.getText().isEmpty()){
                    if (isInt(botonSemestre.getText())){
                        int nuevoSemestre;
                        nuevoSemestre = Integer.parseInt(botonSemestre.getText());
                        try {
                            modificarCurso.updateCourseGroupSemester(Grupo,nuevoSemestre);
                            validandoSemestre = true;
                            botonSemestre.setText("");
                        } catch (SQLException ex) {
                               Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                           }
                       } else {
                           JOptionPane.showMessageDialog(null,"Error!\nSemestre debe ser un número!");
                       } 
                }
                
                if(modificarProfesorID){
                    String profesorSeleccionado = (String) comboBoxProfesor.getSelectedItem();
                    String[] obteniendoIdProfesor = profesorSeleccionado.split(" ");
                    String idProfesor = obteniendoIdProfesor[0];
                    int nuevoIdProfe;
                    nuevoIdProfe = Integer.parseInt(idProfesor);
                    try {
                        modificarCurso.updateCourseGroupProfessor(Grupo,nuevoIdProfe);
                        validandoProfesor = true;
                    } catch (SQLException ex) {
                        Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                        validandoProfesor = false;
                    }  
                }
                
                if(modificarCursoID){                 
                    String cursoSeleccionado = (String) comboBoxCursoModificar.getSelectedItem();
                    String[] obteniendoIDCurso = cursoSeleccionado.split(" ");
                    String idCurso = obteniendoIDCurso[0];
                    int nuevoIdCurso;
                    nuevoIdCurso = Integer.parseInt(idCurso);
                    try {
                        modificarCurso.updateCourseGroupCourse(Grupo,nuevoIdCurso);  
                        validandoIdCourse = true;
                    } catch (SQLException ex) {
                        Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                        validandoIdCourse = false;
                    }
                }
       
            if(validandoAño || validandoProfesor || validandoSemestre || validandoIdCourse){ 
                JOptionPane.showMessageDialog(null,"Grupo modificado!");
                modificarProfesorID = false;
                modificarCursoID = false;
                comboBoxProfesor.setEnabled(false);
                comboBoxCursoModificar.setEnabled(false);
                // Actualizar ComboBox
                comBoxGrupo.setVisible(false);
                comBoxGrupo.removeAllItems();
                try {
                    modificarCurso.getCourseGroup(comBoxGrupo);
                } catch (SQLException ex) {
                    Logger.getLogger(RegistrarYModificarGenero.class.getName()).log(Level.SEVERE, null, ex);
                }
                comBoxGrupo.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null,"No se ha modificado Nada!");
            }
        } 
    }//GEN-LAST:event_botonModificarGrupoActionPerformed

    private void comboboxEstudianteGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxEstudianteGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxEstudianteGrupoActionPerformed

    private void checkAbandonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAbandonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAbandonoActionPerformed

    private void botonModificarSxGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarSxGActionPerformed
        boolean validandoStatus = false;
        boolean validandoIDEstudiante = false;
        boolean validandoActualizacion = false;
        String StatusNuevo = null;
        int idEstudiante = 0;
        int Grupo = Integer.parseInt(comboboxEstudianteGrupo.getSelectedItem().toString());
        String NombreEstudiante = (String) comboBoxEstudiante.getSelectedItem();
        String[] obteniendoIDEstudiante = NombreEstudiante.split(" ");
        String ID = obteniendoIDEstudiante[0];
        idEstudiante = Integer.parseInt(ID);
        if(checkActivo.isSelected()){
            StatusNuevo = "ACTIVO";
            validandoStatus = true;
            }
        if(checkAbandono.isSelected()){
           StatusNuevo = "ABANDONO";
           validandoStatus = true;
           }
        if(!checkActivo.isSelected() && !checkAbandono.isSelected()){
           JOptionPane.showMessageDialog(null,"No se ha modificado nada\nNo se ha seleccionado el STATUS.");  
            validandoStatus = false;
           } 
        if(checkActivo.isSelected() && checkAbandono.isSelected()){//VALIDAR
            JOptionPane.showMessageDialog(null,"ERROR\nSolo puede selecionar un STATUS.");
            validandoStatus = false;
            }

        if(validandoStatus){
            try {
                modificarCurso.updateStudentxgroupStatus(idEstudiante,Grupo, StatusNuevo);
                validandoActualizacion = true;
            } catch (SQLException ex) {
                Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                validandoActualizacion = false;
                JOptionPane.showMessageDialog(null,"Error\nEse ID no pertenece a un estudiante del grupo seleccionado.");  
            }      
        }
        if(validandoActualizacion){
            JOptionPane.showMessageDialog(null,"Exito!\nEstudiante modificado");
            botonModificarSxG.setEnabled(false);
            checkActivo.setEnabled(false);
            checkActivo.setSelected(false);
            checkAbandono.setEnabled(false);
            checkAbandono.setSelected(false);
            comboBoxEstudiante.setEnabled(false);

        }
        
            
      

    }//GEN-LAST:event_botonModificarSxGActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        comboBoxEstudiante.removeAllItems();
        checkActivo.setEnabled(true);
        checkAbandono.setEnabled(true);
        botonModificarSxG.setEnabled(true); 
        int idGrupo; //
        idGrupo = Integer.parseInt(comboboxEstudianteGrupo.getSelectedItem().toString());
        try {
            comboBoxEstudiante.setVisible(false);
            modificarCurso.getStudentGroup(comboBoxEstudiante,idGrupo);
            comboBoxEstudiante.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboBoxEstudiante.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboBoxEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEstudianteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxEstudianteActionPerformed

    private void botonAñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonAñoActionPerformed

    private void botonDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDatosActionPerformed
    Tablas tablas = null;
        try {
            tablas = new Tablas(this,true,modificarCurso);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
        }
        tablas.setVisible(true);
    }//GEN-LAST:event_botonDatosActionPerformed

    private void botonSeleccionarProfesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarProfesorActionPerformed
        comboBoxProfesor.setEnabled(true);
        modificarProfesorID = true;
    }//GEN-LAST:event_botonSeleccionarProfesorActionPerformed

    private void botonSeleccionarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarCursoActionPerformed
        modificarCursoID = true;
        comboBoxCursoModificar.setEnabled(true);
    }//GEN-LAST:event_botonSeleccionarCursoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModificarCursos dialog = new ModificarCursos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField botonAño;
    private javax.swing.JTextField botonCreditos;
    private javax.swing.JButton botonDatos;
    private javax.swing.JButton botonModificarCurso;
    private javax.swing.JButton botonModificarGrupo;
    private javax.swing.JButton botonModificarSxG;
    private javax.swing.JTextField botonNombreCurso;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JButton botonSeleccionarCurso;
    private javax.swing.JButton botonSeleccionarProfesor;
    private javax.swing.JTextField botonSemestre;
    private javax.swing.JCheckBox checkAbandono;
    private javax.swing.JCheckBox checkActivo;
    private javax.swing.JComboBox<String> comBoxCurso;
    private javax.swing.JComboBox<String> comBoxGrupo;
    private javax.swing.JComboBox<String> comboBoxCursoModificar;
    private javax.swing.JComboBox<String> comboBoxEstudiante;
    private javax.swing.JComboBox<String> comboBoxProfesor;
    private javax.swing.JComboBox<String> comboboxEstudianteGrupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel tituloBoton2;
    private javax.swing.JLabel tituloBoton3;
    private javax.swing.JLabel titulomodificarSeleccion;
    // End of variables declaration//GEN-END:variables

    private static boolean isInt(String cadena){
        try{
            Integer.parseInt(cadena);
            return true;
        }
        catch (NumberFormatException nfe){
            return false;
        }
       }

    private static class BotonRegistroClienteCedula {

        public BotonRegistroClienteCedula() {
        }
    }
}
