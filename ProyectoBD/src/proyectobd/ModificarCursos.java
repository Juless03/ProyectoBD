/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import ConexionSQL.Conexion;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author paubo
 */
public class ModificarCursos extends javax.swing.JDialog {
    private Conexion modificarCurso;
    private String CursoSeleccionado;
    /**
     * Creates new form ModificarCursos
     */
    public ModificarCursos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getContentPane().setBackground(new Color(157,210,228));


    }       
    
    public ModificarCursos(AdminSetup aThis, boolean modal, Conexion setupAdmin) throws SQLException {
        super(aThis, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        modificarCurso = setupAdmin;
        this.getContentPane().setBackground(new Color(157,210,228));
        modificarCurso.getCourse(comBoxCurso);
        modificarCurso.getCourseGroup(comBoxGrupo);
        modificarCurso.getCourseGroup(comboboxEstudianteGrupo);
        checkActivo.setEnabled(false);
        checkAbandono.setEnabled(false);
        botonModificarSxG.setEnabled(false);
        comboBoxEstudianteGrupo.setVisible(false);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tituloBoton2 = new javax.swing.JLabel();
        comBoxCurso = new javax.swing.JComboBox<>();
        botonCreditos = new javax.swing.JTextField();
        botonNombreCurso = new javax.swing.JTextField();
        botonModificarCurso = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        titulomodificarSeleccion = new javax.swing.JLabel();
        tituloBoton3 = new javax.swing.JLabel();
        comBoxGrupo = new javax.swing.JComboBox<>();
        botonAño = new javax.swing.JTextField();
        botonSemestre = new javax.swing.JTextField();
        botonIDProfesor = new javax.swing.JTextField();
        botonIdCourse = new javax.swing.JTextField();
        botonModificarGrupo = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboboxEstudianteGrupo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        botonModificarSxG = new javax.swing.JButton();
        botonRegresar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        checkAbandono = new javax.swing.JCheckBox();
        checkActivo = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        comboBoxEstudianteGrupo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bell MT", 0, 36)); // NOI18N
        jLabel1.setText("Modificar Cursos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        tituloBoton2.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        tituloBoton2.setText("Creditos");
        getContentPane().add(tituloBoton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 100, 40));

        comBoxCurso.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        comBoxCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxCursoActionPerformed(evt);
            }
        });
        getContentPane().add(comBoxCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 240, 40));

        botonCreditos.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(botonCreditos, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 130, 50));

        botonNombreCurso.setFont(new java.awt.Font("Bell MT", 0, 14)); // NOI18N
        getContentPane().add(botonNombreCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 130, 50));

        botonModificarCurso.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarCurso.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarCurso.setText("Modificar");
        botonModificarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarCursoActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 130, 60));

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Grupo");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 260, -1));

        titulomodificarSeleccion.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        getContentPane().add(titulomodificarSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, -1, -1));

        tituloBoton3.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        tituloBoton3.setText("Nombre Curso");
        getContentPane().add(tituloBoton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 100, 40));

        comBoxGrupo.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        comBoxGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(comBoxGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 210, 160, 40));

        botonAño.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        botonAño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñoActionPerformed(evt);
            }
        });
        getContentPane().add(botonAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 130, 40));

        botonSemestre.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(botonSemestre, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 130, 40));

        botonIDProfesor.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(botonIDProfesor, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, 130, 40));

        botonIdCourse.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        getContentPane().add(botonIdCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 130, 40));

        botonModificarGrupo.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarGrupo.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarGrupo.setText("Modificar");
        botonModificarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 120, 60));

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel12.setText("Estudiante en un Grupo");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 170, 209, -1));

        comboboxEstudianteGrupo.setFont(new java.awt.Font("Bell MT", 0, 12)); // NOI18N
        comboboxEstudianteGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxEstudianteGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(comboboxEstudianteGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 200, 130, 40));

        jLabel14.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        jLabel14.setText("Estudiante");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 310, -1, -1));

        botonModificarSxG.setBackground(new java.awt.Color(255, 193, 5));
        botonModificarSxG.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonModificarSxG.setText("Modificar");
        botonModificarSxG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarSxGActionPerformed(evt);
            }
        });
        getContentPane().add(botonModificarSxG, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 430, 120, 50));

        botonRegresar.setBackground(new java.awt.Color(255, 193, 5));
        botonRegresar.setFont(new java.awt.Font("Bell MT", 0, 16)); // NOI18N
        botonRegresar.setText("Regresar");
        botonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 105, -1));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Curso");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 260, -1));

        jLabel3.setText("IDCurso");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, 60, 20));

        jLabel4.setText("IDProfessor");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 70, 20));

        jLabel5.setText("Año");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 270, 60, 30));

        jLabel8.setText("Semestre");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 60, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Status");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 370, 80, 30));

        checkAbandono.setText("ABANDONO");
        checkAbandono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAbandonoActionPerformed(evt);
            }
        });
        getContentPane().add(checkAbandono, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 390, 100, 30));

        checkActivo.setText("ACTIVO");
        getContentPane().add(checkActivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 360, 100, 30));

        jLabel9.setText("Grupo");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 210, 50, 30));

        comboBoxEstudianteGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEstudianteGrupoActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxEstudianteGrupo, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 300, 270, 30));

        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 200, 100, 40));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Seleccione el estudiante a modificar");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 270, 260, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegresarActionPerformed
    this.dispose();
    AdminSetup ventaAdminSetup = null;
        try {
            ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
        } catch (SQLException ex) {
            Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    ventaAdminSetup.setVisible(true); 
    }//GEN-LAST:event_botonRegresarActionPerformed

    private void comBoxGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxGrupoActionPerformed

    private void botonModificarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarCursoActionPerformed

        boolean validandoCreditos = false;
        boolean validandoNombre = false;
        CursoSeleccionado = (String) comBoxCurso.getSelectedItem();
           if(botonCreditos.getText().isEmpty() && botonNombreCurso.getText().isEmpty()){ 
               JOptionPane.showMessageDialog(null,"Por favor llene los campos a modificar");
           } else {
                if(!botonCreditos.getText().isEmpty()){
                   if (isInt(botonCreditos.getText())){
                       int Creditos = Integer.parseInt(botonCreditos.getText());
                       try {
                           modificarCurso.updateCourseCredits(CursoSeleccionado,Creditos);
                           validandoCreditos = true;
                       } catch (SQLException ex) {
                           Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   } else {
                    JOptionPane.showMessageDialog(null,"Error en creditos:\nSolo debe ingresar números.");} 
                }
                if(!botonNombreCurso.getText().isEmpty()){
                try {
                    String nuevoNombreCorso = botonNombreCurso.getText().toString();
                    modificarCurso.updateCourseName(CursoSeleccionado, nuevoNombreCorso);
                    validandoNombre = true;
                     } catch (SQLException ex) {
                    Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }
               }
           }
           if(validandoCreditos & validandoNombre){
               JOptionPane.showMessageDialog(null,"Creditos Y Nombre Modificado!!");
               this.dispose(); 
               AdminSetup ventaAdminSetup = null;
                try {
                    ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
                } catch (SQLException ex) {
                    Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                }
                ventaAdminSetup.setVisible(true); 
           } else {
               if(validandoCreditos){
                   JOptionPane.showMessageDialog(null,"Creditos Modificados!!");
                   this.dispose();
                   AdminSetup ventaAdminSetup = null;
                    try {
                       ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
                   } catch (SQLException ex) {
                       Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   ventaAdminSetup.setVisible(true); 
               }
               if(validandoNombre){
                   JOptionPane.showMessageDialog(null,"Nombre Modificado!!");
                   this.dispose();
                    AdminSetup ventaAdminSetup = null;
                    try {
                        ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
                    } catch (SQLException ex) {
                        Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ventaAdminSetup.setVisible(true); 
               }
           }
            
        


               
    }//GEN-LAST:event_botonModificarCursoActionPerformed

    private void comBoxCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxCursoActionPerformed

    private void botonModificarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarGrupoActionPerformed
        boolean validandoAño = false;
        boolean validandoProfesor = false;
        boolean validandoSemestre = false;
        boolean validandoIdCourse = false;
        int Grupo = Integer.parseInt(comBoxGrupo.getSelectedItem().toString());
        if(botonAño.getText().isEmpty() && botonSemestre.getText().isEmpty() && botonIDProfesor.getText().isEmpty() && botonIdCourse.getText().isEmpty()){
                JOptionPane.showMessageDialog(null,"No se ha modificado nada \nCampos vacios.");  
            } 
        else {
            if(!botonAño.getText().isEmpty()){
             String AñoGrupo = botonAño.getText();
             String[] partesFechaAño = AñoGrupo.split("/");
             String ParteDia = partesFechaAño[0];
             String ParteMes = partesFechaAño[1];
             String ParteAños = partesFechaAño[2];
             int parte1int = Integer.parseInt(ParteDia);
             int parte2int = Integer.parseInt(ParteMes);
             int parte3int = Integer.parseInt(ParteAños);
             if(ParteDia.length() != 2 || ParteMes.length() != 2 || ParteAños.length() != 4){
                    JOptionPane.showMessageDialog(null,"Error en el Año del curso \nError en el formato.");  
                } else {
                    if(parte1int != 00){
                    if(parte1int > 0 && parte1int <= 31){
                    if(parte2int > 0 && parte2int <= 12){
                    if(parte3int > 1800 && parte3int < 2023){
                            validandoAño = true;
                            } else {
                            JOptionPane.showMessageDialog(null,"Error en Año \nEl año debe estar entre 1800 y 2022");
                            validandoAño = false;   
                                    }
                                } else{
                                    JOptionPane.showMessageDialog(null,"Error en Año\nEl nes debe estar entre 1 y 12");
                                    validandoAño = false;
                                }
                            } else {
                                JOptionPane.showMessageDialog(null,"Error en Año\nEl día debe estar entre entre 1 y 31");
                                validandoAño = false;}
                            } else {
                            JOptionPane.showMessageDialog(null,"Error en Año\nDía debe estar entre 1 y 31");
                                validandoAño = false;
                            }
                    }
                    if(validandoAño){
                        java.sql.Date nuevoAñoCurso = null;
                        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
                        Date FechaDate = null;
                        try {
                            FechaDate = formatoFecha.parse(botonAño.getText());
                        } catch (ParseException ex) {
                            Logger.getLogger(RegistroPersona.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        nuevoAñoCurso = new java.sql.Date(FechaDate.getTime());
                        try {
                             modificarCurso.updateCourseGroupYear(Grupo, nuevoAñoCurso);
                        } catch (SQLException ex) {
                            Logger.getLogger(ModificarPersona.class.getName()).log(Level.SEVERE, null, ex);
                            validandoAño = false;
                            }
                         } else {
                            JOptionPane.showMessageDialog(null,"Error!\nAño no actualizado!"); 
                        }
                    }
                 if(!botonSemestre.getText().isEmpty()){
                   if (isInt(botonSemestre.getText())){
                       int nuevoSemestre = Integer.parseInt(botonSemestre.getText());
                       try {
                           modificarCurso.updateCourseGroupSemester(Grupo,nuevoSemestre);
                           validandoSemestre = true;
                       } catch (SQLException ex) {
                           Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   } else {
                       JOptionPane.showMessageDialog(null,"Error!\nSemestre debe ser un número!");
                   } 
                }
                if(!botonIDProfesor.getText().isEmpty()){
                    if (isInt(botonIDProfesor.getText())){
                       int nuevoIdProfesor = Integer.parseInt(botonIDProfesor.getText());
                       try {
                           modificarCurso.updateCourseGroupProfessor(Grupo,nuevoIdProfesor);
                           validandoProfesor = true;
                       } catch (SQLException ex) {
                           //Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                           JOptionPane.showMessageDialog(null,"Error!\nEse ID no pertenece a un profesor.");
                           validandoProfesor = false;
                       }
                   }
                 }
                if(!botonIdCourse.getText().isEmpty()){
                    if (isInt(botonIdCourse.getText())){
                       int nuevoIdCurso = Integer.parseInt(botonIdCourse.getText());
                       try {
                           modificarCurso.updateCourseGroupCourse(Grupo,nuevoIdCurso);  
                           validandoIdCourse = true;
                       } catch (SQLException ex) {
                           Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                           validandoIdCourse = false;

                       }
                   }
                 }
            if(validandoAño || validandoProfesor || validandoSemestre || validandoIdCourse){ 
                JOptionPane.showMessageDialog(null,"Grupo modificado!");
                this.dispose();
                AdminSetup ventaAdminSetup = null;
                    try {
                        ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
                    } catch (SQLException ex) {
                        Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                ventaAdminSetup.setVisible(true); 
            } else{
                JOptionPane.showMessageDialog(null,"No se ha modificado Nada!");
    
            
            }
        } 
    }//GEN-LAST:event_botonModificarGrupoActionPerformed

    private void comboboxEstudianteGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxEstudianteGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxEstudianteGrupoActionPerformed

    private void checkAbandonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAbandonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAbandonoActionPerformed

    private void botonModificarSxGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarSxGActionPerformed
        boolean validandoStatus = false;
        boolean validandoIDEstudiante = false;
        boolean validandoActualizacion = false;
        String StatusNuevo = null;
        int idEstudiante = 0;
        int Grupo = Integer.parseInt(comboboxEstudianteGrupo.getSelectedItem().toString());
        String NombreEstudiante = (String) comboBoxEstudianteGrupo.getSelectedItem();
        String[] obteniendoIDEstudiante = NombreEstudiante.split(" ");
        String ID = obteniendoIDEstudiante[0];
        idEstudiante = Integer.parseInt(ID);
        if(checkActivo.isSelected()){
            StatusNuevo = "ACTIVO";
            validandoStatus = true;
            }
        if(checkAbandono.isSelected()){
           StatusNuevo = "ABANDONO";
           validandoStatus = true;
           }
        if(!checkActivo.isSelected() && !checkAbandono.isSelected()){
           JOptionPane.showMessageDialog(null,"No se ha modificado nada\nNo se ha seleccionado el STATUS.");  
            validandoStatus = false;
           } 
        if(checkActivo.isSelected() && checkAbandono.isSelected()){//VALIDAR
            JOptionPane.showMessageDialog(null,"ERROR\nSolo puede selecionar un STATUS.");
            validandoStatus = false;
            }

        if(validandoStatus){
            try {
                modificarCurso.updateStudentxgroupStatus(idEstudiante,Grupo, StatusNuevo);
                validandoActualizacion = true;
            } catch (SQLException ex) {
                Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                validandoActualizacion = false;
                JOptionPane.showMessageDialog(null,"Error\nEse ID no pertenece a un estudiante del grupo seleccionado.");  
            }      
        }
        if(validandoActualizacion){
            JOptionPane.showMessageDialog(null,"Exito!\nEstudiante modificado");
            this.dispose();
            AdminSetup ventaAdminSetup = null;
                try {
                    ventaAdminSetup = new AdminSetup(this,true, modificarCurso);
                } catch (SQLException ex) {
                    Logger.getLogger(ModificarCursos.class.getName()).log(Level.SEVERE, null, ex);
                    }
            ventaAdminSetup.setVisible(true); 
            
        }
        
            
      

    }//GEN-LAST:event_botonModificarSxGActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        comboBoxEstudianteGrupo.removeAllItems();
        checkActivo.setEnabled(true);
        checkAbandono.setEnabled(true);
        botonModificarSxG.setEnabled(true);
        int idGrupo = Integer.parseInt(comboboxEstudianteGrupo.getSelectedItem().toString());
        try {
            comboBoxEstudianteGrupo.setVisible(false);
            modificarCurso.getStudentGroup(comboBoxEstudianteGrupo,idGrupo);
            comboBoxEstudianteGrupo.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboBoxEstudianteGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEstudianteGrupoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxEstudianteGrupoActionPerformed

    private void botonAñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonAñoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarCursos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModificarCursos dialog = new ModificarCursos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField botonAño;
    private javax.swing.JTextField botonCreditos;
    private javax.swing.JTextField botonIDProfesor;
    private javax.swing.JTextField botonIdCourse;
    private javax.swing.JButton botonModificarCurso;
    private javax.swing.JButton botonModificarGrupo;
    private javax.swing.JButton botonModificarSxG;
    private javax.swing.JTextField botonNombreCurso;
    private javax.swing.JButton botonRegresar;
    private javax.swing.JTextField botonSemestre;
    private javax.swing.JCheckBox checkAbandono;
    private javax.swing.JCheckBox checkActivo;
    private javax.swing.JComboBox<String> comBoxCurso;
    private javax.swing.JComboBox<String> comBoxGrupo;
    private javax.swing.JComboBox<String> comboBoxEstudianteGrupo;
    private javax.swing.JComboBox<String> comboboxEstudianteGrupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel tituloBoton2;
    private javax.swing.JLabel tituloBoton3;
    private javax.swing.JLabel titulomodificarSeleccion;
    // End of variables declaration//GEN-END:variables

    private static boolean isInt(String cadena){
        try{
            Integer.parseInt(cadena);
            return true;
        }
        catch (NumberFormatException nfe){
            return false;
        }
       }

    private static class BotonRegistroClienteCedula {

        public BotonRegistroClienteCedula() {
        }
    }
}
